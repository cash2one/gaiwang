<?php

/**
 * 系统调用到的工具脚本
 * @author wanyun.liu <wanyun_liu@163.com>
 */
class ToolCommand extends CConsoleCommand {

    /**
     * 系统工具监测网站的运行状态后，
     * 发送短信通知相关人员
     */
    public function actionMonitorSite($mobile, $content) {
        Sms::send($mobile, $content);
    }
    
    /**
     * 将客服提供的数据进行退款处理
     */
    public function actionRefund()
    {
        //return false;
//     	$payNode = array(
//     		Order::PAY_ONLINE_UN=>AccountFlow::BUSINESS_NODE_EBANK_GUANGZHOUYINLIAN,
//     		Order::PAY_ONLINE_BEST=>AccountFlow::BUSINESS_NODE_EBANK_YI,
//     		Order::PAY_ONLINE_UM=>AccountFlow::BUSINESS_NODE_EBANK_UM,
//     		Order::PAY_ONLINE_TLZF=>AccountFlow::BUSINESS_NODE_EBANK_TL,
    		
//     	);

    	$flowTableName = AccountFlow::monthTable(); //流水按月分表日志表名
    	/*$data = array(
    			'20151031162603424499' => array('GW98665284',269.5),
    			'20151106224630866423' => array('GW13792394',109.5),
    			'20151021215813040937' => array('GW91003981',198),
    			'20150710170010051316' => array('GW59967216',4539),
    			'20151105220321094071' => array('GW28436770',4199),
    			'20150902173431749486' => array('GW85922219',183),
    			'20151106165322674392' => array('GW42744187',175.12),
    			'20150807215207011622' => array('GW38563451',10560),
    			'20151112230056940252' => array('GW28613663',3370.5),
    			'20151023162421054692' => array('GW89386553',1080),
    			'20150824101834904364' => array('GW97681644',2678),
    			'20151023134436978733' => array('GW17695425',540),
    			'20151027105754960431' => array('GW66434242',540),
    			'20151113105502762409' => array('GW85757831',2680),
    	);*/
		/*
        $data = array(
            '20151208211215168742' => array('GW68719461', 229.50),
            '20151212210320308077' => array('GW23144911', 169.50),
            '20151209130918171314' => array('GW63251318', 159.00),
            '20151212224938322469' => array('GW23144911', 79.00),
            '20151216215731142616' => array('GW75668544', 378.00),
            '20151127120920399566' => array('GW55825145', 414.00),
            '20151212230515708722' => array('GW48791734', 575.00),
            '20151210173904378844' => array('GW20794993', 4320.00),
            '20151106165322674392' => array('GW42744187', 175.00),
            '20151210174450125457' => array('GW20794993', 1100.00),
            '20151223194859265546' => array('GW12658764', 3200.00),
            '20151113105502762409' => array('GW85757831', 2680.00),
            '20151126210826350797' => array('GW81486485', 129.50),
            '20151127105248092391' => array('GW56520013', 429.00),
            '20151216203545920341' => array('GW65770902', 3699.00),
            '20151112124803702939' => array('GW21154678', 269.00),
            '20151113183332787041' => array('GW74706907', 328.00),
            '20150710170010051316' => array('GW59967216', 4539.00),
            '20151112184829511478' => array('GW45170574', 269.50),
            '20151031162603424499' => array('GW98665284', 269.50),
    	);
		*/
		$data = array(
            '20150807215207011622' => array('GW81124793', 10560),
            '20151212210320308077' => array('GW23144911', 169.50),
            '20151209130918171314' => array('GW63251318', 159),
            '20151212224938322469' => array('GW23144911', 79),
            '20151216215731142616' => array('GW75668544', 378),
            '20151113105502762409' => array('GW85757831', 2680),
            '20151126210826350797' => array('GW81486485', 129.5),
        );
    	$error = array();
    	$trans = Yii::app()->db->beginTransaction();
    	try{
    		foreach ($data as $code=>$row)
    		{
    			$flows = array();
    			$order = Yii::app()->db->createCommand("select id,code,pay_type from gw_order where code='".$code."'")->queryRow();
                if(empty($order)){
                    $error[] = $row;
                    continue;
                }
    			$member = Yii::app()->db->createCommand("select id,gai_number from gw_member where gai_number='".$row[0]."'")->queryRow();
    			$balanceMember = OnlineOperate::getMemberAccountInfo($member, AccountInfo::TYPE_CONSUME, false);

    			if($balanceMember['today_amount']<$row[1])
    			{
    				$error[] = $row;
                    echo 'error '.$row[0].' - '.$balanceMember['today_amount'].PHP_EOL;
    				continue;
    			}

    			$flows[] = AccountFlow::mergeFlowData($order, $balanceMember, array(
    					'credit_amount' => -$row[1],
    					'operate_type' => AccountFlow::OPERATE_TYPE_REFUND_CASH,
    					'remark' => '扣除积分，退款金额到银行卡：￥' . $row[1],
    					'node' => AccountFlow::BUSINESS_NODE_REFUND_CASH,
    					'transaction_type' => AccountFlow::TRANSACTION_TYPE_CASH,
    			));
    			if (!AccountBalance::calculate(array('today_amount' => -$row[1]), $balanceMember['id'])) {
    				throw new Exception('update memberAccount error');
    			}
    			//写入流水
    			foreach ($flows as $log) {
    				Yii::app()->db->createCommand()->insert($flowTableName, $log);
    			}
                echo 'success '.$code.PHP_EOL;
    		}
    		$trans->commit();
    	} catch (Exception $e) {
            $trans->rollback();
//            throw new Exception('update error');
            print_r($e->getMessage());
        }
        
        echo 'error'.PHP_EOL;print_r($error);

    }
    
    /**
     * 将多充值的充值卡进行回收
     */
    public function actionReturnCard()
    {
    	$cards = array(
    		'9108405812','4951737321','8878995225','5644508465','5972610557','8808163261','7945998126','1686623415','5326489076','3452025179','6776136721','4895392740','7635055106','5758989625','2321216688','6654820771','8689862680','7212101700','6350394091','3018244012','3847569335','7474837981','4408860637','2441516806','2172926388','2108275941','1778624544','8111954607','6137716049','9961915207','2299067063','1626230233','8256882848','2684832743','7511580454','4871606738','2905677863','8533700173','8861011712','4885753406','9215979358','7151894254','1419637185','4343013949','5472407500','9811248281','1651695208','6485363947','7321526088','3944558244','3280309213','8585816312','5497319876','6813564687','6536020437','1757857491','3475631711','2705256485','2035276151','9567308760','8633711138','3365692127','7490484135','6915386796','9444303169','6465730184','4016072570','3349593773','2774914389','7704503193','2923335714','9443476867','8064729022','1584883109','7004802269','7028701890','4750424180','9476557933','6003084754','2062928974','3966139254','5297097066','6937805434','8799066080','5455860014','8913336901','5163120989','3407925011','5754386296','1700369605','4639227561','1677221614','1605971316','3043403798','5379413559','2502810414','2542828268','9184211824','6108315509','4650736187','8484181928','6177559777','6914456579','6159729973','8674413143','4819694493','2171466983','6382189544','4829941465','8475039848','4007228230','2940999020','4577455703','8619549642','8040387699','4673832340','5004755223','5530101773','3362348258','9387413197','1435258315','3451348035','6280689291','3616396199','8148483547','5591778468','3518587927','8842713304','7281377906','3923384230','8460636569','9800467887','6837089724','8679544876','1416520349','9961421297','1509065710','7355052514','3398972639','4839371104','1170490136','3201508038','5327996284','9154054766','3809382429','1444474253','7173411467','9714711708','1455406238','9595695070','6483251149','7868911694','1103142025','3952643954','6907306593','2360992308','8120276866','1576643029','6314323109','1350445269','2486516059','5218188724','3153408499','6882278240','9516189730','5643682163','8409044388','3330938593','1262045231','4494292628','3819210297','7945554812','4473976434','8095004391','3133615448','1758659658','6182776445','3511672167','6941010957','6673355391','2302173312','4737285221','6276172396','9614946044','7982295194','4709496774','5850231735','7587325000','4226354953','5563379882','1833585423','7164455354','6994805597','7034496398','3464328957','4665666605','4761365589','4360563235','3498706233','5243906145','1630504536','9876659019','1641763395','3639700489','3288804849','1131257293','9444669351','8091624239','8525819341','6458668348','3389694976','2527934462','7456587017','3484309674','7820555055','6759315645','1994199324','5432519898','5870964639','9108511209','2257263049','5999321134','5653912956','1301442628','9454667320','5196379627','2029391297','4450580288','3715674599','5550100698','2685932704','8124391538','6864360316','5102658474','4045006499','4273676180','3915361350','4252567158','2906111372','9148386944','9283568298','5388027756','2928256986','4463061434','6695978456','4133732551','9564519655','4422761318','8124997589','6974698397','8947072648','9319728745','8975806198','1249099390','6790402960','2633180002','1283251052','1659745651','8803080297','4838448744','5774155384','8035004364','3294597848','8744098188','7773662863','6705009659','2740555677','8074268207','2800522333','2033573795','5467864856','3793851706','4927907751','6165729347','7515638114','7556202634','4097982830','4691225422','1644160935','3086575713','4625417082','7267114898','8311125497','8244343522','2782450594','9123312483','5265978427','5716427022','5054046486','2993347250','2638425624','2079074730','9305596727','8044006785','2307669713','2656791449','9107386728','1253254619','1966284083','8203233507','3757505368','3412482459','6468366625','1189176074','3754666285','5901272004','4566285755','2929731926','3285594872','1638802021','7084845967','3484678378','7536000814','8775194947','6532661349','5884750938','8534987795','1684617596','7225526686','2668862278','9511173214','5550272497','6490659943','8941379516','2395794853','5345362659','9284779057','5531040518','8285123017','2442590126','2588015735','2743654537','2491335949','9744991556','3399948162','7156149427','9502699974','4151080304','3876270035','9829576374','5077113266','7010656286','1054729709','5594738920','2822541904','6854640236','9878307771','4706426340','2740755116','8276945302','9515425424','5846383006','7578332716','9816783703','9546904659','9481911768','1922920676','1067391330','2902479941','9337254509','8961078609','2498305820','4141467121','6078922584','5810284041','2942673718','7967072479','6299637630','7535824803','8372720822','7410986861','8045672665','5672777812','2809369951','5439852741','5072448242','5407032559','5238894730','6975099589','4116526919','8152683197','8198684008','5877255483','4629466595','1573929878','8717424655','2561790685','2806864728','8361177152','2718825428','3768021001','4524638376','4772352709','3833777670','7079645978','6740839555','8402301816','9445163968','8878129948','5607974010','7956894066','3094732749','8234753909','8769508234','2910431854','9692968902','4737157012','5486219387','8037702685','1075354217','6518583539','6158023023','4086965936','4931020345','3564392127','2097030065','3334481820','6795342914','6318840879','9340229319','6966400296','7694141474','3819819599','8046764979','2369938545','8120888592','9061244931','3295194337','6025662816','5750231429','9574615900','7701089348','5635517434','2072295112','8715185862','6345336614','3670393645','3296281272','5023555462','8902680426','8342836714','4777127259','3510161131','1440926942','8567848260','1514429240','5256910186','3306854303','2442545008','7470815237','1700120767','4734641725','8871051728','9101484181','3828767449','5969684462','1334640864','8275336026','8609982515','2257958999','5001911168','7960924863','6094350082','5324569781','9355349482','1811644618','1638712921'
    	);
    	$monthTable = AccountFlowHistory::monthTable();
    	$smsData = array();
    	$transaction = Yii::app()->db->beginTransaction();
    	try {
    		foreach ($cards as $key=>$card)
    		{
    			$sql = "UPDATE gw_import_recharge_record SET `status`=3,detail='".'收回充值卡'."' WHERE card_number='".$card."';";//将充值卡导入的状态改为其它
    			Yii::app()->db->createCommand($sql)->execute();
    		
    			$curCard = Yii::app()->db->createCommand("SELECT id,`value`,money,member_id,use_time FROM gw_prepaid_card WHERE number='".$card."' FOR UPDATE")->queryRow();
    		
    			//将充值卡的钱收回
    			$sql = "UPDATE gw_prepaid_card SET sale_remark='充值卡导入出错，充值卡回收（2015-12-17）' WHERE number='".$curCard['id']."';";
    			Yii::app()->db->createCommand($sql)->execute();
    		
    			//扣除账户余额
    			$member = Yii::app()->db->createCommand()->select('id,gai_number,mobile,type_id')->from('{{member}}')->where('id=:member_id',array(':member_id'=>$curCard['member_id']))->queryRow();
    			// 会员余额表记录创建（旧）
    			$memberBalance = AccountBalanceHistory::findRecord(array('account_id' => $member['id'], 'type' => AccountBalance::TYPE_CONSUME, 'gai_number' => $member['gai_number']));
    			// 贷方
    			$credit = array(
    					'account_id' => $member['id'],
    					'gai_number' => $memberBalance['gai_number'],
    					'card_no' => $memberBalance['card_no'],
    					'type' => AccountFlow::TYPE_CONSUME,
    					'credit_amount' => -$curCard['money'],
    					'operate_type' => AccountFlow::OPERATE_TYPE_CARD_RECHARGE,
    					'prepaid_card_no' => $card,
    					'remark' => '使用积分充值卡充值错误，收回金额为：￥' . $curCard['money'],
    					'node' => AccountFlow::BUSINESS_NODE_CARD_RECHARGE,
    					'transaction_type' => AccountFlow::TRANSACTION_TYPE_RECHARGE,
    					'recharge_type' => AccountFlow::RECHARGE_TYPE_CARD
    			);
    			$credit['by_gai_number'] = '';
    		
    			// 会员余额更新（旧）
    			AccountBalanceHistory::calculate(array('today_amount' => -$curCard['money']), $memberBalance['id']);
    			// 记录月流水表（旧）
    			Yii::app()->db->createCommand()->insert($monthTable, AccountFlow::mergeField($credit));
    			
    			$totalMoney = Member::getTotalPrice(AccountInfo::TYPE_CONSUME, $member['id'], $member['gai_number']);
    			//记录短信数据
                                                    $smsConfig = Tool::getConfig('smsmodel');
    			$smsData[] = array(
    				'mobile'=>$member['mobile'],
    				'msg' => '尊敬的'.$member['gai_number'].'用户，您于'.date('Y-m-d H:i:s',$curCard['use_time']).'使用了充值卡'.$card.'充值错误，现收回'.$curCard['value'].'盖网积分。目前您消费积分余额为'.Common::convertSingle($totalMoney, $member['type_id']).'，请您核实 。',
    				'card_id'=>$curCard['id'],
                                                                      'datas'=>array($member['gai_number'],date('Y-m-d H:i:s',$curCard['use_time']),$card,$curCard['value'],Common::convertSingle($totalMoney, $member['type_id'])),
                                                                      'tmpId' => $smsConfig['recoveryPrepaidcarId'],
    			);
    		}
    		$transaction->commit();
    	}catch (Exception $e) {
            $transaction->rollback();
        }
        
        foreach ($smsData as $sms)
        {
        	SmsLog::addSmsLog($sms['mobile'], $sms['msg'], $sms['datas'], $sms['tmpId'], $sms['card_id'], SmsLog::TYPE_CARD_RECHARGE);
        } 
    }
    
    /**
     * 将某个产品下的订单自动签收日期改为1天
     */
    public function actionSignDate()
    {
    	$date = 1;
    	
    	$goodsId = array(378057,
    			338057,
    			389754,
    			389759,
    			394819,
    			394834,
    			394856,
    			394893,
    			394936,
    			394949,
    			400808,
    			400831,
    			400854,
    			400870,
    			400887,
    			400897,
    			400908,
    			400930,
    			400937,
    			400951,
    			400960,
    			400981,
    			400997,
    			401014,
    			401034,
    			401058
    	);
    	
//     	$sql = "SELECT o.id FROM gw_order o,gw_order_goods og WHERE o.id=og.order_id AND og.goods_id IN (".implode(',', $goodsId).")";
    	$sql = "UPDATE gw_order o,gw_order_goods og set o.auto_sign_date=".$date." WHERE o.id=og.order_id AND og.goods_id IN (".implode(',', $goodsId).");";
    	
    	
    	echo $sql;
    	
    	
    }
    
    /**
     * 处理财务提供的错误流水数据
     * @author LC
     */
    public function actionHandleflow()
    {
    	$file = 'flow.csv';
    	$file = fopen($file,"r");
    	$i = 1;
    	while ($row = fgetcsv($file))
    	{
    		if($i>1)
    		{
    			if($row[2])$row[2] = number_format(str_replace(',', '', $row[2]),2,'.','');
    			if($row[3])$row[3] = number_format(str_replace(',', '', $row[3]),2,'.','');
    			$row[0] = str_replace('201512_', '', $row[0]);
    			$updateData = array(
    			);
    			if($row[1]) $updateData['node'] = $row[1];
    			if($row[2]) 
    			{
    				$updateData['debit_amount'] = $row[2];
    			}
    			else 
    			{
    				$updateData['debit_amount'] = 0;
    			}
    			if($row[3]) 
    			{
    				$updateData['credit_amount'] = $row[3];
    			}
    			else
    			{
    				$updateData['credit_amount'] = 0;
    			}
    			
 
    			$ac = Yii::app()->ac;
    			$ac->createCommand()->update('gw_account_flow_201512', $updateData,'id='.$row[0]);
    		}
    		$i++;
    	}
    	echo 'Success';
    	fclose($file);
    }
}
